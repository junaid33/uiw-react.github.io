(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[69],{

/***/ 588:
/***/ (function(module, exports) {

module.exports = "Notification 通知提醒框\n===\n\n全局展示通知提醒信息。\n\n### 基本用法\n\n<!--DemoStart--> \n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open.bind(this)}>4.5秒后可自动关闭</Button>\n      <Button onClick={this.open2.bind(this)}>不会自动关闭</Button>\n      <Button onClick={this.open3.bind(this)}>4.5秒后自动关闭</Button>\n    </div>\n  )\n}\nopen() {\n  Notification({\n    message: '通知提醒框标题名称',\n    description: '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案',\n    onClose(){\n      console.log(\"onClose-> 关闭回调事件！\")\n    }\n  });\n}\nopen2() {\n  Notification({\n    message: '提示',\n    description: '这是一条不会自动关闭的消息',\n    duration: 0,\n  });\n}\nopen3() {\n  Notification.info({\n    message: '提示',\n    description: '这是一条不会自动关闭的消息',\n  });\n}\n```\n<!--End-->\n\n\n### 带状态的通知\n\n<!--DemoStart--> \n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open1.bind(this)}>成功</Button>\n      <Button onClick={this.open2.bind(this)}>警告</Button>\n      <Button onClick={this.open3.bind(this)}>消息</Button>\n      <Button onClick={this.open4.bind(this)}>错误</Button>\n    </div>\n  )\n}\n//'success', 'warning','info', 'error'\nopen1() {\n  Notification({\n    message: '通知提醒框标题名称',\n    description: '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案',\n    type:\"success\",\n  });\n}\nopen2() {\n  Notification({\n    message: 'Notification Title',\n    description: 'I will never close automatically. I will be close automatically. I will never close automatically.',\n    type:\"warning\",\n  });\n}\nopen3() {\n  Notification({\n    message: 'Notification Title',\n    description: 'I will never close automatically. I will be close automatically. I will never close automatically.',\n    type:\"info\",\n  });\n}\nopen4() {\n  Notification({\n    message: 'Notification Title',\n    description: 'I will never close automatically. I will be close automatically. I will never close automatically.',\n    type:\"error\",\n  });\n}\n```\n<!--End-->\n\n### 弹出通知位置\n\n可以设置通知从右上角、右下角、左下角、左上角弹出。\n\n<!--DemoStart--> \n```js\nconstructor(props) {\n  super(props);\n  this.state = {\n    options: [\n      { value: 'topLeft', label: 'topLeft' }, \n      { value: 'topRight', label: 'topRight' }, \n      { value: 'bottomLeft', label: 'bottomLeft' }, \n      { value: 'bottomRight', label: 'bottomRight' }, \n    ],\n    value: 'topLeft'\n  };\n}\nonChange(e,value){\n  this.setState({\n    value\n  })\n}\nopen() {\n  Notification({\n    message: 'Notification Title',\n    description: 'I will never close automatically. I will be close automatically. I will never close automatically.',\n    type:\"info\",\n    placement:this.state.value\n  });\n}\nrender() {\n  return (\n    <div>\n    <Select onChange={this.onChange.bind(this)} style={{width:200}} value={this.state.value}>\n      {\n        this.state.options.map(elm => {\n          return <Select.Option key={elm.value} label={elm.label} value={elm.value} disabled={elm.disabled} />\n        })\n      }\n    </Select>\n    <Button style={{marginLeft:10}} size='small' onClick={this.open.bind(this)}>点击</Button>\n    </div>\n  )\n}\n```\n<!--End-->\n\n\n## API\n\n### Notification Attributes\n\n| 参数 | 说明 | 类型 | 默认值 |\n|--------- |-------- |--------- |-------- |\n| message | 通知提醒标题，必选 | String|ReactNode | - |\n| description | 通知提醒内容，必选 | String|ReactNode | - |\n| className | 自定义 CSS class | String | - |\n| style | 自定义内联样式 | String | - |\n| showIcon | 是否显示图标 | Boolean | - |\n| placement | 弹出位置，可选 `topLeft`、`topRight`、`bottomLeft`、`bottomRight` | Boolean | `topRight` |\n| duration | 显示时间, 秒。设为 0 则不会自动关闭 | String | 4.5 |\n| onClose | 通知提醒框关闭回调事件 | Function | - |"

/***/ })

}]);