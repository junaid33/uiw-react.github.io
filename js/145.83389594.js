(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[145],{

/***/ 661:
/***/ (function(module, exports) {

module.exports = "Badge 标记\n===\n\n出现在按钮、图标旁的数字或状态标记。\n\n\n### 基础用法\n\n展示新消息数量。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <Badge count={ 12 }>\n        <Button size=\"small\">评论</Button>\n      </Badge>\n    )\n  }\n}\n```\n<!--End-->\n\n\n### 封顶数字\n\n不包裹任何元素即是独立使用，可自定样式展现。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter=\"20\" style={{width:280}}>\n        <Col span=\"6\">\n          <Badge count={ 99 }>\n            <Button size=\"small\">评论</Button>\n          </Badge>\n        </Col>\n        <Col span=\"6\">\n          <Badge count={ 100 }>\n            <Button size=\"small\">回复</Button>\n          </Badge>\n        </Col>\n        <Col span=\"6\">\n          <Badge count={ 99 } max={10}>\n            <Button size=\"small\">点赞</Button>\n          </Badge>\n        </Col>\n        <Col span=\"6\">\n          <Badge count={ 1000 } max={999}>\n            <Button size=\"small\">打分</Button>\n          </Badge>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n<!--End-->\n\n### 独立使用\n\n不包裹任何元素即是独立使用，可自定样式展现。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter=\"20\" style={{width:150}}>\n        <Col span=\"6\">\n          <Badge count={25} /> \n        </Col>\n        <Col span=\"6\">\n          <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }} /> \n        </Col>\n        <Col span=\"6\">\n          <Badge count={109} style={{ backgroundColor: '#87d068' }} /> \n        </Col>\n      </Row>\n    )\n  }\n}\n```\n<!--End-->\n\n### 小红点\n\n以红点的形式标注需要关注的内容。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row gutter=\"20\" style={{width:350}}>\n        <Col span=\"6\">\n          <Badge dot>\n            数据查询\n          </Badge>\n        </Col>\n        <Col span=\"6\">\n          <Badge dot count={4}>\n            <Icon type='message-o' />\n          </Badge>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n<!--End-->\n\n### 动态\n\n展示动态变化的效果。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: true,\n    }\n  }\n  render() {\n    const {Row,Col} = Layout;\n    const {checked} = this.state;\n    return (\n      <Row gutter=\"20\" style={{width:350}}>\n        <Col span=\"6\">\n          <Badge dot count={checked?1:0}>\n            数据查询\n          </Badge>\n        </Col>\n        <Col span=\"6\">\n          <Switch \n            checked={this.state.checked}\n            onChange={(e,checked)=>{\n              this.setState({\n                checked:checked\n              })\n              console.log(`${checked?\"选中\":'没有选中'}`)\n          }}/>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n<!--End-->\n\n### 状态点\n\n用于表示状态的小圆点。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <Badge status=\"success\" />\n        <Badge status=\"error\" />\n        <Badge status=\"default\" />\n        <Badge status=\"processing\" />\n        <Badge status=\"warning\" />\n        <br />\n        <Badge status=\"success\">Success</Badge>\n        <br />\n        <Badge status=\"error\">Error</Badge>\n        <br />\n        <Badge status=\"default\">Default</Badge>\n        <br />\n        <Badge status=\"processing\">Processing</Badge>\n        <br />\n        <Badge status=\"warning\">Warning</Badge>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n## API\n\n### Badge\n\n| 参数 | 说明 | 类型 | 默认值 |\n|--------- |-------- |--------- |-------- |\n| style | 默认设置计数圆点样式，设置`status`，`style`设置外层节点样式 | Object | - |\n| count | 展示的数字 | Number | - |\n| max | 最大值，超过最大值会显示 '{max}+' | Number | `99` |\n| dot | 不展示数字，只有一个小红点 | Boolean | `false` |\n| status | 设置 Badge 为状态点 | Enum{`success`, `processing`,`default`, `error`, `warning` } | - |\n"

/***/ })

}]);