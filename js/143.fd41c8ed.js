(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[143],{

/***/ 662:
/***/ (function(module, exports) {

module.exports = "Button 按钮\n===\n\n按钮用于开始一个即时操作，触发业务逻辑时使用。\n\n### 基本用法\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <Button>Normal</Button>\n        <Button disabled>Disabled</Button>\n        <Button type=\"primary\" active>Button</Button>\n        <Button type=\"primary\" size=\"small\">more <Icon type=\"arrow-down\" /></Button>\n        <Button type=\"link\"> (超连接样式)link </Button>\n        <Divider />\n        <Button type=\"primary\">主要按钮</Button>\n        <Button type=\"success\">成功按钮</Button>\n        <Button type=\"info\">信息按钮</Button>\n        <Button type=\"warn\">警告按钮</Button>\n        <Button type=\"danger\">错误按钮</Button>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### 按钮组\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const ButtonGroup = Button.Group;\n    return (\n      <div>\n        <ButtonGroup>\n          <Button>Left</Button>\n          <Button>Middle</Button>\n          <Button disabled>Disabled</Button>\n          <Button>Right</Button>\n        </ButtonGroup>\n        \n        <Divider />\n\n        <ButtonGroup>\n          <Button>Left</Button>\n        </ButtonGroup>\n        <Divider />\n        <ButtonGroup>\n          <Button size=\"small\" type=\"info\">Secondary Normal</Button>\n          <Button size=\"small\" type=\"info\">Secondary Disabled</Button>\n        </ButtonGroup>\n        <Divider />\n        <ButtonGroup>\n          <Button size=\"small\">Secondary Normal</Button>\n          <Button size=\"small\">Secondary Disabled</Button>\n          <Button size=\"small\"><Icon type=\"arrow-down\" /></Button>\n        </ButtonGroup>\n        <Divider />\n        <ButtonGroup>\n          <Button type=\"warn\">Warn Normal</Button>\n          <Button type=\"warn\" disabled>Disabled</Button>\n        </ButtonGroup>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### 添加图标\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const ButtonGroup = Button.Group;\n    return (\n      <div>\n        <ButtonGroup>\n          <Button type=\"success\" icon=\"upload\" />\n          <Button type=\"success\" icon=\"information\" />\n          <Button type=\"success\" icon=\"edit\" />\n        </ButtonGroup>\n\n        <Divider />\n\n        <ButtonGroup>\n          <Button size=\"small\"><Icon type=\"arrow-left\" />返回</Button>\n          <Button size=\"small\">前进<Icon type=\"arrow-right\" /></Button>\n        </ButtonGroup>\n        \n\n        <ButtonGroup>\n          <Button size=\"small\" icon=\"upload\" />\n          <Button size=\"small\">返回</Button>\n          <Button size=\"small\">前进<Icon type=\"arrow-right\" /></Button>\n        </ButtonGroup>\n        \n        <ButtonGroup>\n          <Button size=\"default\"><Icon type=\"arrow-left\" /></Button>\n          <Button size=\"default\"><Icon type=\"arrow-right\" /></Button>\n        </ButtonGroup>\n\n        <ButtonGroup>\n          <Button size=\"large\"><Icon type=\"arrow-left\" />返回</Button>\n          <Button size=\"large\">前进<Icon type=\"arrow-right\" /></Button>\n        </ButtonGroup>\n\n\n        <Divider />\n\n        <ButtonGroup>\n          <Button icon=\"upload\" />\n          <Button icon=\"information\" />\n          <Button icon=\"edit\" />\n          <Button icon=\"delete\" />\n          <Button icon=\"information\" />\n          <Button icon=\"verification\" />\n        </ButtonGroup>\n\n        <Divider />\n\n        <ButtonGroup>\n          <Button type=\"link\" icon=\"upload\" />\n          <Button type=\"link\" icon=\"information\" />\n          <Button type=\"link\" icon=\"edit\" />\n          <Button type=\"link\" icon=\"delete\" />\n          <Button type=\"link\" icon=\"information\" />\n          <Button type=\"link\" icon=\"verification\" />\n        </ButtonGroup>\n\n        <Button type=\"link\" icon=\"verification\" />\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n\n### 竖排列vertical\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const ButtonGroup = Button.Group;\n    return (\n      <div>\n        <ButtonGroup vertical={true}>\n          <Button>Left</Button>\n          <Button>Middle</Button>\n          <Button disabled>Disabled</Button>\n          <Button>Right</Button>\n        </ButtonGroup>\n        \n        &nbsp;&nbsp;\n\n        <ButtonGroup vertical>\n          <Button size=\"small\">Left</Button>\n          <Button size=\"small\">Middle</Button>\n          <Button size=\"small\" disabled>Disabled</Button>\n          <Button size=\"small\">Right</Button>\n        </ButtonGroup>\n\n        &nbsp;&nbsp;\n\n        <ButtonGroup vertical>\n          <Button size=\"small\" type=\"primary\">Left</Button>\n          <Button size=\"small\" type=\"primary\">Middle</Button>\n          <Button size=\"small\" type=\"primary\" disabled>Disabled</Button>\n          <Button size=\"small\" type=\"primary\">Right</Button>\n        </ButtonGroup>\n\n        &nbsp;&nbsp;\n\n        <ButtonGroup vertical>\n          <Button size=\"small\" icon=\"upload\"></Button>\n          <Button size=\"small\" icon=\"menu\">Middle</Button>\n          <Button size=\"small\" icon=\"share\" disabled>Disabled</Button>\n          <Button size=\"small\" icon=\"verification\">Right</Button>\n        </ButtonGroup>\n\n        &nbsp;&nbsp;\n\n        <ButtonGroup vertical>\n          <Button size=\"small\" icon=\"upload\"></Button>\n          <Button size=\"small\" icon=\"menu\"></Button>\n          <Button size=\"small\" icon=\"share\" disabled></Button>\n          <Button size=\"small\" icon=\"verification\"></Button>\n        </ButtonGroup>\n\n        &nbsp;&nbsp;\n\n        <ButtonGroup vertical>\n          <Button size=\"small\" type=\"link\" icon=\"upload\"></Button>\n          <Button size=\"small\" type=\"link\" icon=\"menu\"></Button>\n          <Button size=\"small\" type=\"link\" icon=\"share\" disabled></Button>\n          <Button size=\"small\" type=\"link\" icon=\"verification\"></Button>\n        </ButtonGroup>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### 点击Loading\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false,\n      loading3:false,\n      loading4:false,\n      loading5:true,\n      loading2:false\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Button size=\"mini\" loading={this.state.loading} \n          onClick={()=>{\n            console.log(\"loading:\",this.state.loading)\n            this.setState({loading:true})\n        }}>\n          点击Loading\n        </Button>\n        <Button size=\"small\" type=\"success\" loading={this.state.loading2} \n          onClick={()=>{\n            console.log(\"loading2:\",this.state.loading2)\n            this.setState({loading2:true})\n        }}>\n          点击Loading\n        </Button>\n        <Button size=\"small\" type=\"info\" loading={this.state.loading5} \n          onClick={()=>{\n            console.log(\"loading5:\",this.state.loading5)\n        }}>\n          点击Loading\n        </Button>\n        <Button size=\"default\" type=\"success\" loading={this.state.loading3} \n          onClick={()=>{\n            console.log(\"loading3:\",this.state.loading3)\n            this.setState({loading3:true})\n        }}>\n          点击Loading\n        </Button>\n        <Button size=\"large\" type=\"danger\" loading={this.state.loading4} \n          onClick={()=>{\n            console.log(\"loading4:\",this.state.loading4)\n            this.setState({loading4:true})\n        }}>\n          点击Loading\n        </Button>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### active样式\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <Button active size=\"small\" type=\"default\">  默认样式 </Button>\n        <Button active size=\"small\" type=\"primary\"> （首选项）Primary </Button>\n        <Button active size=\"small\" type=\"success\"> （成功）Success </Button>\n        <Button active size=\"small\" type=\"info\"> （一般信息）Info </Button>\n        <Button active size=\"small\" type=\"warn\"> （警告）Warning </Button>\n        <Button active size=\"small\" type=\"danger\"> （危险）Danger </Button>\n        <Button active size=\"small\" type=\"link\"> (超连接样式)link </Button>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### disabled样式\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const ButtonGroup = Button.Group;\n    return (\n      <div>\n        <ButtonGroup>\n          <Button size=\"small\" disabled type=\"default\">  默认样式 </Button>\n          <Button size=\"small\" disabled type=\"primary\"> （首选项）Primary </Button>\n          <Button size=\"small\" disabled type=\"success\"> （成功）Success </Button>\n          <Button size=\"small\" disabled type=\"info\"> （一般信息）Info </Button>\n          <Button size=\"small\" disabled type=\"warn\"> （警告）Warning </Button>\n          <Button size=\"small\" disabled type=\"danger\"> （危险）Danger </Button>\n        </ButtonGroup>\n        <br/>\n        <br/>\n        <Button size=\"small\" disabled type=\"default\">  默认样式 </Button>\n        <Button size=\"small\" disabled type=\"primary\"> （首选项）Primary </Button>\n        <Button size=\"small\" disabled type=\"success\"> （成功）Success </Button>\n        <Button size=\"small\" disabled type=\"info\"> （一般信息）Info </Button>\n        <Button size=\"small\" disabled type=\"warn\"> （警告）Warning </Button>\n        <Button size=\"small\" disabled type=\"danger\"> （危险）Danger </Button>\n        <Button size=\"small\" disabled type=\"link\"> (超连接样式)link </Button>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### size大小\n\n`size` 在 `Button.Group`下面不支持。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <Button size=\"mini\" icon=\"arrow-down\" type=\"default\">mini</Button>\n        <Button size=\"small\" type=\"primary\"><Icon type=\"arrow-down\" /> small</Button>\n        <Button size=\"default\" type=\"success\"><Icon type=\"arrow-down\" /> default</Button>\n        <Button size=\"large\" type=\"info\"><Icon type=\"arrow-down\" /> large</Button>\n      </div>\n    )\n  }\n}\n```\n<!--End-->\n\n### block\n\n`block` 在 `Button.Group`下面不支持。\n\n<!--DemoStart--> \n```js\nclass Demo extends Component {\n  render() {\n    const {Row,Col} = Layout;\n    return (\n      <Row>\n        <Col xs=\"8\" sm=\"8\" md=\"8\" xs=\"24\">\n          <Button type=\"info\" block size=\"small\">（小按钮）Small button </Button>\n          <Button type=\"info\" block size=\"default\">（默认尺寸）Default button </Button>\n        </Col>\n      </Row>\n    )\n  }\n}\n```\n<!--End-->\n\n## 安装和使用\n\n```bash\nnpm install uiw --save\n```\n\n```js\nimport { Button } from 'uiw';\n// or\nimport Button from 'uiw/lib/button';\nconst ButtonGroup = Button.Group;\n```\n\n### Button\n\n| 参数 | 说明 | 类型 | 默认值 |\n| -------- | -------- | -------- | -------- |\n| size | `large`, `default`, `small`, `mini` |String | - |\n| type | `default`,`primary`,`success`,`info`,`warn`,`error`,`danger` |String | - |\n| htmlType | 设置 `button` 原生的 `type` 值，可选值请参考 [HTML 标准](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type) |String | `button` |\n| icon | 设置按钮的图标类型 |String | - |\n| block | 通过设置属性 block 可将按钮宽度设置为 100%，（块级元素），常用于弹窗内操作按钮。 |Boolean | false |\n| disabled | 禁用状态 |Boolean | false |\n| active | 激活状态，其表现为被按压下去（底色更深、边框夜色更深、向内投射阴影）。 |Boolean | false |\n| loading | 加载中状态 | Boolean | false |\n| onClick | click 事件的 handler |function | - |\n\n### Button.Group\n\n| 参数 | 说明 | 类型 | 默认值 |\n| -------- | -------- | -------- | -------- |\n| vertical | 竖排列 | Boolean | `false` |\n"

/***/ })

}]);